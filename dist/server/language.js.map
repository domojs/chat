{"version":3,"sources":["../language.ts"],"names":[],"mappings":"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","file":"language.js","sourcesContent":["import * as di from 'akala-core';\r\nimport * as debug from 'debug';\r\nimport { EventEmitter } from 'events';\r\nimport * as fs from 'fs';\r\nimport * as $ from 'underscore';\r\nimport * as eachAsync from 'each-async';\r\nimport * as path from 'path';\r\nimport * as akala from 'akala-server/dist/sharedcomponent';\r\n\r\nvar log = debug('domojs:chat');\r\n\r\n@di.factory(\"language\", '$config', '$bus')\r\nexport class LanguageFactory extends akala.ComponentFactory<Language>\r\n{\r\n    constructor(config, bus?: SocketIO.Socket)\r\n    {\r\n        super(config, bus);\r\n    }\r\n\r\n    public build()\r\n    {\r\n        return new Language(this.bus);\r\n    }\r\n}\r\n\r\nexport class Language extends akala.Component\r\n{\r\n    constructor(bus?: SocketIO.Socket)\r\n    {\r\n        super('language', bus);\r\n    }\r\n\r\n    public path: string;\r\n    public name: string;\r\n}\r\n\r\nexport type Interpreter = (context: Context, next: (error?: any) => void, callback: (answer: string) => void) => void;\r\n\r\nexport interface Context\r\n{\r\n    text: string;\r\n    deferred?: boolean;\r\n}\r\n\r\nexport interface KeywordContext extends Context\r\n{\r\n    action: string;\r\n    keyword: string;\r\n    other: string;\r\n}\r\n\r\nexport interface Map<V>\r\n{\r\n    [key: string]: V;\r\n}\r\n\r\nexport abstract class KeywordInterpreter\r\n{\r\n    constructor() { }\r\n\r\n    public findInfo(collection: Map<string[]>, text: string)\r\n    {\r\n        log(collection);\r\n        if (collection)\r\n        {\r\n            for (var item in collection)\r\n            {\r\n                log(item);\r\n                for (var syno of collection[item])\r\n                {\r\n                    log(syno);\r\n                    if (text.indexOf(syno) >= 0)\r\n                        return item;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    public register()\r\n    {\r\n        var self = this;\r\n\r\n        di.injectWithName(['interpreters'], function (interpreters: Interpreter[])\r\n        {\r\n            interpreters.push(function (context: KeywordContext, next: (error?: any) => void, callback: (answer: string) => void)\r\n            {\r\n                try\r\n                {\r\n                    self.process(context, next, callback);\r\n                }\r\n                catch (ex)\r\n                {\r\n                    next({message:ex.message, stack:ex.stack});\r\n                }\r\n            });\r\n        })();\r\n    }\r\n\r\n    protected actions: Map<string[]>;\r\n    protected keywords: Map<string[]>;\r\n    protected others: Map<string[]>;\r\n\r\n    public understand(cmd: KeywordContext)\r\n    {\r\n        cmd.action = this.findInfo(this.actions, cmd.text);\r\n        log('action: ' + cmd.action);\r\n        cmd.keyword = this.findInfo(this.keywords, cmd.text);\r\n        log('keywords: ' + cmd.keyword);\r\n        cmd.other = this.findInfo(this.others, cmd.text);\r\n        log('other: ' + cmd.other);\r\n    }\r\n\r\n    public process(context: KeywordContext, next: (error?: any) => void, callback: (answer: string) => void): void\r\n    {\r\n        this.understand(context);\r\n        if (!context.keyword)\r\n            next();\r\n        if (!context.deferred)\r\n            this.execute(context, next, callback);\r\n    }\r\n\r\n    public abstract execute(context: KeywordContext, next: (error?: any) => void, callback: (answer: string) => void);\r\n};"],"sourceRoot":"chat/src/server"}